pipeline
{

agent any

tools{
maven "maven3.8.5"
}

triggers {
  pollSCM ('* * * * *')
}

options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}
stages{
 //Checkout Code Stage
 stage ('checkoutcode')
 {
 steps{
 git branch: 'development', credentialsId: '472098e9-437e-48c3-a00b-15dec907c92c', url: 'https://github.com/sravya2425/maven-web-application.git'
  }
 }

//Build stage
stage('Build')
{
steps{
sh "mvn clean package"
}
}

//Execute SonarQube Report
stage ('ExecuteSonarQubeReport'){
steps{
sh "mvn sonar:sonar"
}
}

//UploadArtifcactsIntoNexus
stage('UploadIntoNexus')
{
steps{
sh "mvn deploy"
}
}

stage('DeployAppIntoTomcatServer')
{
steps{
sshagent(['f8a2d652-9938-42e2-9493-ea72cc08ee94']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.22.21:/opt/apache-tomcat-9.0.63/webapps"
}
}
}

}//Stages closing

post {
  success {
   sendSlackNotifications('SUCCESS')
  }
  failure {
   sendSlackNotifications('FAILURE')
  }
}

}//Pipeline closing

def sendSlackNotifications(String buildStatus = 'STARTED') {

buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
